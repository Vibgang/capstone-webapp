{"ast":null,"code":"var _jsxFileName = \"/Users/tejas/frontend/src/components/StatutePredictionPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios'; // We use axios for making the HTTP request\nimport '../index.css';\nimport '../modules.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StatutePredictionPage = () => {\n  _s();\n  const [textInput, setTextInput] = useState('');\n  const [output, setOutput] = useState(null); // Update to store sections and text\n  const [isLoading, setIsLoading] = useState(false); // To show loading state\n\n  const handleTextChange = e => {\n    setTextInput(e.target.value);\n  };\n  const handleProcess = async () => {\n    setIsLoading(true); // Start loading\n    try {\n      const response = await axios.post('http://localhost:5000/statute', new FormData().append('inputData', textInput), {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      // Assuming the response data is in the form of sections\n      const data = response.data;\n      if (data && data.predictedSections) {\n        // Process sections to display\n        setOutput(data.predictedSections.map((section, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-output\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"section-title\",\n            children: section.section\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"section-text\",\n            children: section.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)));\n      } else {\n        setOutput('No sections predicted.');\n      }\n    } catch (error) {\n      console.error('Error processing the request:', error);\n      setOutput('Error occurred while processing the statute.');\n    } finally {\n      setIsLoading(false); // Stop loading\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Statute Prediction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instructions\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Enter or paste your document text to predict relevant statutes.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: textInput,\n        onChange: handleTextChange,\n        placeholder: \"Enter document text here...\",\n        className: \"text-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleProcess,\n        className: \"process-button\",\n        disabled: isLoading // Disable the button while loading\n        ,\n        children: isLoading ? 'Processing...' : 'Predict Statutes'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), output && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"output-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"output-title\",\n          children: \"Output:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), output]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(StatutePredictionPage, \"r5TOjuzC3W+d4Ujl9IthslZJYhs=\");\n_c = StatutePredictionPage;\nexport default StatutePredictionPage;\nvar _c;\n$RefreshReg$(_c, \"StatutePredictionPage\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","StatutePredictionPage","_s","textInput","setTextInput","output","setOutput","isLoading","setIsLoading","handleTextChange","e","target","value","handleProcess","response","post","FormData","append","headers","data","predictedSections","map","section","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","text","error","console","onChange","placeholder","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/tejas/frontend/src/components/StatutePredictionPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios'; // We use axios for making the HTTP request\nimport '../index.css';\nimport '../modules.css';\n\nconst StatutePredictionPage = () => {\n  const [textInput, setTextInput] = useState('');\n  const [output, setOutput] = useState(null); // Update to store sections and text\n  const [isLoading, setIsLoading] = useState(false); // To show loading state\n\n  const handleTextChange = (e) => {\n    setTextInput(e.target.value);\n  };\n\n  const handleProcess = async () => {\n    setIsLoading(true); // Start loading\n    try {\n      const response = await axios.post('http://localhost:5000/statute', new FormData().append('inputData', textInput), {\n        headers: { 'Content-Type': 'multipart/form-data' },\n      });\n      // Assuming the response data is in the form of sections\n      const data = response.data;\n      if (data && data.predictedSections) {\n        // Process sections to display\n        setOutput(\n          data.predictedSections.map((section, index) => (\n            <div key={index} className=\"section-output\">\n              <h3 className=\"section-title\">{section.section}</h3>\n              <p className=\"section-text\">{section.text}</p>\n            </div>\n          ))\n        );\n      } else {\n        setOutput('No sections predicted.');\n      }\n    } catch (error) {\n      console.error('Error processing the request:', error);\n      setOutput('Error occurred while processing the statute.');\n    } finally {\n      setIsLoading(false); // Stop loading\n    }\n  };\n\n  return (\n    <div className=\"page-container\">\n      <div className=\"content-container\">\n        <h1 className=\"title\">Statute Prediction</h1>\n        <div className=\"instructions\">\n          <p>Enter or paste your document text to predict relevant statutes.</p>\n        </div>\n        <textarea\n          value={textInput}\n          onChange={handleTextChange}\n          placeholder=\"Enter document text here...\"\n          className=\"text-input\"\n        />\n        <button\n          onClick={handleProcess}\n          className=\"process-button\"\n          disabled={isLoading} // Disable the button while loading\n        >\n          {isLoading ? 'Processing...' : 'Predict Statutes'}\n        </button>\n        {output && (\n          <div className=\"output-container\">\n            <h2 className=\"output-title\">Output:</h2>\n            {output}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default StatutePredictionPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}